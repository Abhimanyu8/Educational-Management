
> karma@1.0.0-alpha-1 dev /home/rwithik/Projects/karma/src
> DEBUG=karma:* nodemon ./bin/www

[33m[nodemon] 1.18.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./bin/www`[39m

> karma@1.0.0-alpha-1 lint--fix /home/rwithik/Projects/karma/src
> eslint ./ --fix --report-unused-disable-directives --format 'node_modules/eslint-friendly-formatter'

index
Executing (default): CREATE TABLE IF NOT EXISTS `entity_types` (`id` INTEGER auto_increment , `entity_type` VARCHAR(63) NOT NULL UNIQUE, `entity_type_slug` VARCHAR(63) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `entity_types` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `entities` (`id` INTEGER auto_increment , `entity_name` VARCHAR(255) NOT NULL UNIQUE, `entity_slug` VARCHAR(63) NOT NULL UNIQUE, `entity_type_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`entity_type_id`) REFERENCES `entity_types` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `entities` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `courses_offered` (`id` INTEGER auto_increment , `official_course_id` VARCHAR(31) NOT NULL, `name` VARCHAR(63) NOT NULL, `department_id` INTEGER NOT NULL, `credits` INTEGER NOT NULL, `valid_start_date` DATETIME NOT NULL, `valid_end_date` DATETIME NOT NULL, `duration_in_days` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`department_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `courses_offered` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `people` (`id` INTEGER auto_increment , `first_name` VARCHAR(63) NOT NULL, `middle_name` VARCHAR(63), `last_name` VARCHAR(63) NOT NULL, `gender` CHAR(1) NOT NULL, `date_of_birth` DATE NOT NULL, `nationality` VARCHAR(63) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `people` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `student_attendance_data` (`id` INTEGER auto_increment , `student_id` INTEGER NOT NULL, `course_id` INTEGER NOT NULL, `faculty_id` INTEGER NOT NULL, `start_date_time` DATETIME NOT NULL, `end_date_time` DATETIME NOT NULL, `value` INTEGER NOT NULL, `max_value` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, `people_id` INTEGER, UNIQUE `compositeIndex` (`student_id`, `start_date_time`, `end_date_time`), PRIMARY KEY (`id`), FOREIGN KEY (`course_id`) REFERENCES `courses_offered` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`faculty_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `student_attendance_data` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `stream_types` (`id` INTEGER auto_increment , `stream_type_long` VARCHAR(255) NOT NULL, `stream_type_short` VARCHAR(63) NOT NULL, `start_date` DATETIME NOT NULL, `end_date` DATETIME NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `stream_types` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `streams_offered` (`id` INTEGER auto_increment , `stream_type_id` INTEGER NOT NULL, `stream_name` VARCHAR(63) NOT NULL, `department_id` INTEGER NOT NULL, `valid_start_date` DATETIME NOT NULL, `valid_end_date` DATETIME NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`stream_type_id`) REFERENCES `stream_types` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`department_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `streams_offered` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `classes` (`id` INTEGER auto_increment , `stream_id` INTEGER, `division` INTEGER, `current_class_slug` VARCHAR(20) NOT NULL, `start_date` DATETIME NOT NULL, `end_date` DATETIME NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`stream_id`, `division`, `current_class_slug`), PRIMARY KEY (`id`), FOREIGN KEY (`stream_id`) REFERENCES `streams_offered` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `classes` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `student_class_enrolment_activity` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `class_id` INTEGER NOT NULL, `date` DATETIME NOT NULL, `activity` CHAR(1) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`class_id`) REFERENCES `classes` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `student_class_enrolment_activity` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `student_course_enrolment_activity` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `course_id` INTEGER NOT NULL, `date_time` DATETIME NOT NULL, `activity` CHAR(1) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`course_id`) REFERENCES `courses_offered` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `student_course_enrolment_activity` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `student_course_grading_standards` (`id` INTEGER auto_increment , `standard_name` VARCHAR(63) NOT NULL, `standard_description` VARCHAR(255) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `student_course_grading_standards` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `student_course_grades` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `course_id` INTEGER NOT NULL, `status` CHAR(1) NOT NULL, `grade` VARCHAR(7) NOT NULL, `grading_standard_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`course_id`) REFERENCES `courses_offered` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`grading_standard_id`) REFERENCES `student_course_grading_standards` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `student_course_grades` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `student_course_grading_standards_grade_association` (`id` INTEGER auto_increment , `grading_standard_id` INTEGER NOT NULL, `grade` VARCHAR(7) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`grading_standard_id`) REFERENCES `student_course_grading_standards` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `student_course_grading_standards_grade_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `student_course_internal_assessment` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `course_id` INTEGER NOT NULL, `type` VARCHAR(23) NOT NULL, `start_date_time` DATETIME NOT NULL, `end_date_time` DATETIME NOT NULL, `marks_obtained` INTEGER NOT NULL, `maximum_marks` INTEGER NOT NULL, `status` CHAR(1) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`course_id`) REFERENCES `courses_offered` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `student_course_internal_assessment` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `student_stream_enrolment_activity` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `stream_id` INTEGER NOT NULL, `date` DATETIME NOT NULL, `activity` CHAR(1) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`stream_id`) REFERENCES `streams_offered` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `student_stream_enrolment_activity` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `people_information_slugs` (`id` INTEGER auto_increment , `slug_name` VARCHAR(63) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `people_information_slugs` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `people_information` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `slug_id` INTEGER NOT NULL, `data` JSON NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`people_id`, `slug_id`), PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`slug_id`) REFERENCES `people_information_slugs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `people_information` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `news_data` (`id` INTEGER auto_increment , `title` VARCHAR(255) NOT NULL, `text` MEDIUMTEXT NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `news_data` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `news` (`id` INTEGER auto_increment , `news_id` INTEGER NOT NULL, `entity_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`news_id`, `entity_id`), PRIMARY KEY (`id`), FOREIGN KEY (`news_id`) REFERENCES `news_data` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`entity_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `news` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `menu_data` (`id` INTEGER auto_increment , `entity_id` INTEGER NOT NULL, `menu_type` INTEGER NOT NULL, `menu_title` VARCHAR(45), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`entity_id`, `menu_type`), PRIMARY KEY (`id`), FOREIGN KEY (`entity_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `menu_data` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `menu_elements` (`id` INTEGER auto_increment , `menu_id` INTEGER NOT NULL, `position` INTEGER NOT NULL, `item_name` VARCHAR(255) NOT NULL, `item_url` VARCHAR(1023) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`menu_id`) REFERENCES `menu_data` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `menu_elements` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `menu_parent_child_associations` (`id` INTEGER auto_increment , `parent_id` INTEGER NOT NULL, `child_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`parent_id`) REFERENCES `menu_elements` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`child_id`) REFERENCES `menu_elements` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `menu_parent_child_associations` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `media` (`id` INTEGER auto_increment , `media_title` VARCHAR(63), `media_file_name` VARCHAR(2047) NOT NULL, `media_location` VARCHAR(2047) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `media` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `media_roles` (`id` INTEGER auto_increment , `role_name` VARCHAR(255) NOT NULL UNIQUE, `role_slug` VARCHAR(63) NOT NULL UNIQUE, `role_description` VARCHAR(2047), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `media_roles` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `media_role_entity_association` (`id` INTEGER auto_increment , `media_id` INTEGER NOT NULL, `role_id` INTEGER NOT NULL, `entity_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`media_id`, `role_id`, `entity_id`), PRIMARY KEY (`id`), FOREIGN KEY (`media_id`) REFERENCES `media` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`role_id`) REFERENCES `media_roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`entity_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `media_role_entity_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `media_role_people_association` (`id` INTEGER auto_increment , `media_id` INTEGER NOT NULL, `role_id` INTEGER NOT NULL, `people_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`media_id`, `role_id`, `people_id`), PRIMARY KEY (`id`), FOREIGN KEY (`media_id`) REFERENCES `media` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`role_id`) REFERENCES `media_roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `media_role_people_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `people_activities` (`id` INTEGER auto_increment , `activity_name` VARCHAR(255) NOT NULL UNIQUE, `activity_slug` VARCHAR(63) NOT NULL UNIQUE, `activity_description` VARCHAR(2047) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `people_activities` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `people_activity_log` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `people_activity_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`people_activity_id`) REFERENCES `people_activities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `people_activity_log` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `faculty_academic_enrolment_activity` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `course_id` INTEGER NOT NULL, `activity` CHAR(1) NOT NULL, `date_time` DATETIME NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `faculty_academic_enrolment_activity` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `faculty_class_advisory_activity` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL, `class_id` INTEGER NOT NULL, `activity` CHAR(1) NOT NULL, `date_time` DATETIME NOT NULL, `course_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`class_id`) REFERENCES `classes` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`course_id`) REFERENCES `courses_offered` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `faculty_class_advisory_activity` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `events` (`id` INTEGER auto_increment , `event_name` VARCHAR(255) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `events` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `event_information_slugs` (`id` INTEGER auto_increment , `slug_name` VARCHAR(63) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `event_information_slugs` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `event_information` (`id` INTEGER auto_increment , `event_id` INTEGER NOT NULL UNIQUE, `slug_id` INTEGER NOT NULL UNIQUE, `data` JSON NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`event_id`) REFERENCES `events` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`slug_id`) REFERENCES `event_information_slugs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `event_information` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `event_parent_child_association` (`id` INTEGER auto_increment , `parent_id` INTEGER NOT NULL, `child_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`parent_id`, `child_id`), PRIMARY KEY (`id`), FOREIGN KEY (`parent_id`) REFERENCES `events` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`child_id`) REFERENCES `events` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `event_parent_child_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `entity_information_slugs` (`id` INTEGER auto_increment , `slug_name` VARCHAR(45) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `entity_information_slugs` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `entity_information` (`id` INTEGER auto_increment , `entity_id` INTEGER NOT NULL, `slug_id` INTEGER NOT NULL, `data` JSON NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`entity_id`, `slug_id`), PRIMARY KEY (`id`), FOREIGN KEY (`entity_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`slug_id`) REFERENCES `entity_information_slugs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `entity_information` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `entity_parent_child_association` (`id` INTEGER auto_increment , `parent_id` INTEGER NOT NULL, `child_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, UNIQUE `compositeIndex` (`parent_id`, `child_id`), PRIMARY KEY (`id`), FOREIGN KEY (`parent_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`child_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `entity_parent_child_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `entity_people_enrollment` (`id` INTEGER auto_increment , `entity_id` INTEGER NOT NULL, `people_id` INTEGER NOT NULL, `date_time` DATETIME NOT NULL, `activity` CHAR(1) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`entity_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `entity_people_enrollment` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `entity_position_association` (`id` INTEGER auto_increment , `entity_id` INTEGER NOT NULL, `status` CHAR(1) NOT NULL, `position_name` VARCHAR(63) NOT NULL, `position_slug` VARCHAR(63) NOT NULL, `position_description` MEDIUMTEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`entity_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `entity_position_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `entity_people_position_enrolment` (`id` INTEGER auto_increment , `entity_position_association_id` INTEGER NOT NULL, `people_id` INTEGER NOT NULL, `activity` CHAR(1) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`entity_position_association_id`) REFERENCES `entity_position_association` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `entity_people_position_enrolment` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `blogs` (`id` INTEGER auto_increment , `blog_name` VARCHAR(255) NOT NULL, `blog_alias_name` VARCHAR(255) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `blogs` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `blog_enrollment` (`id` INTEGER auto_increment , `blog_id` INTEGER NOT NULL, `activity` CHAR(1) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`blog_id`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `blog_enrollment` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `blog_entities_association` (`id` INTEGER auto_increment , `blog_id` INTEGER NOT NULL, `entity_id` INTEGER NOT NULL, `status` CHAR(1), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`blog_id`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`entity_id`) REFERENCES `entities` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `blog_entities_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `blog_people_association` (`id` INTEGER auto_increment , `blog_id` INTEGER NOT NULL, `people_id` INTEGER NOT NULL, `status` CHAR(1), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`blog_id`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `blog_people_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `blog_roles` (`id` INTEGER auto_increment , `role_name` VARCHAR(255) NOT NULL, `role_slug` VARCHAR(45) NOT NULL, `role_description` VARCHAR(2048), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `blog_roles` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `blog_role_people_association` (`id` INTEGER auto_increment , `blog_id` INTEGER NOT NULL, `role_id` INTEGER NOT NULL, `people_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`blog_id`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`role_id`) REFERENCES `blog_roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `blog_role_people_association` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `posts` (`id` INTEGER auto_increment , `blog_id` INTEGER NOT NULL, `post_url` VARCHAR(2047), `people_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`blog_id`) REFERENCES `blogs` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `posts` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `post_data` (`id` INTEGER auto_increment , `post_id` INTEGER NOT NULL, `author_id` INTEGER NOT NULL, `post_title` VARCHAR(255) NOT NULL, `post_element_status` CHAR(1) NOT NULL, `post_content` MEDIUMTEXT NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`post_id`) REFERENCES `posts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`author_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `post_data` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `authentication_information_local` (`id` INTEGER auto_increment , `people_id` INTEGER NOT NULL UNIQUE, `password_hash` VARCHAR(100) NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`people_id`) REFERENCES `people` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `authentication_information_local` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `time_slots` (`id` INTEGER auto_increment , `start_timestamp` TIME NOT NULL, `end_timestamp` TIME NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `time_slots` FROM `karma`
Executing (default): CREATE TABLE IF NOT EXISTS `classes_time_tables` (`id` INTEGER auto_increment , `class_id` INTEGER NOT NULL, `day` VARCHAR(15) NOT NULL, `time_slot_id` INTEGER NOT NULL, `faculty_id` INTEGER NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`class_id`) REFERENCES `classes` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`time_slot_id`) REFERENCES `time_slots` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`faculty_id`) REFERENCES `faculty_academic_enrolment_activity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `classes_time_tables` FROM `karma`
